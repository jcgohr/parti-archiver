name: Build and Release

on:
  push:
    branches: [ master ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: parti-archiver
            asset_name: parti-archiver-linux
          - os: windows-latest
            artifact_name: parti-archiver.exe
            asset_name: parti-archiver-windows.exe
          - os: macos-latest
            artifact_name: parti-archiver
            asset_name: parti-archiver-macos

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Clone yt-dlp repository
      run: |
        git clone https://github.com/yt-dlp/yt-dlp.git yt-dlp-repo

    - name: Install dependencies and build (Unix)
      if: runner.os != 'Windows'
      run: |
        cd yt-dlp-repo
        python3 devscripts/install_deps.py --include pyinstaller
        python3 devscripts/make_lazy_extractors.py
        # Copy all files from parent directory to maintain imports
        cp -r ../* . || true
        python3 -m PyInstaller --onefile --name parti-archiver --additional-hooks-dir=yt_dlp/__pyinstaller --hidden-import=yt_dlp.compat._legacy --hidden-import=yt_dlp.compat._deprecated --hidden-import=yt_dlp.utils._legacy --hidden-import=yt_dlp.utils._deprecated archiver.py

    - name: Install dependencies and build (Windows)
      if: runner.os == 'Windows'
      run: |
        cd yt-dlp-repo
        python devscripts/install_deps.py --include pyinstaller
        python devscripts/make_lazy_extractors.py
        # Copy all files from parent directory to maintain imports
        robocopy ..\ . /E /XD yt-dlp-repo || if ($lastexitcode -lt 8) { $global:LASTEXITCODE = 0 }
        python -m PyInstaller --onefile --name parti-archiver --additional-hooks-dir=yt_dlp/__pyinstaller --hidden-import=yt_dlp.compat._legacy --hidden-import=yt_dlp.compat._deprecated --hidden-import=yt_dlp.utils._legacy --hidden-import=yt_dlp.utils._deprecated archiver.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: yt-dlp-repo/dist/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: release-${{ github.sha }}
        name: Release ${{ github.sha }}
        draft: false
        prerelease: false
        files: |
          ./parti-archiver-linux/parti-archiver
          ./parti-archiver-windows.exe/parti-archiver.exe
          ./parti-archiver-macos/parti-archiver